

CREATE COMPUTE MODULE String_operator_mf_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.employee;
        DECLARE boolvar BOOLEAN;
        DECLARE charvar CHARACTER;
        DECLARE intvar INTEGER;

        -- BOOLEAN Operations
        SET boolvar = CONTAINS(inRef.name, 'Lakshmi');  
        SET boolvar = ENDSWITH(inRef.name, 'Devi');
        SET boolvar = STARTSWITH(inRef.name, 'Lakshmi');

        -- STRING Operations
        -- LEFT
        SET charvar = LEFT(inRef.name, 2);

        -- RIGHT
        SET charvar = RIGHT(inRef.name, 2);

        -- LENGTH
        SET intvar = LENGTH(inRef.name);

        -- LOWER (LCASE)
        SET charvar = LOWER(inRef.name);

        -- UPPER (UCASE)
        SET charvar = UPPER(inRef.name);

        -- LTRIM
        SET charvar = LTRIM(inRef.post);

        -- RTRIM
        SET charvar = RTRIM(inRef.post);

        -- TRIM
        SET charvar = TRIM('I' FROM inRef.company);
        SET charvar = TRIM(TRAILING 's' FROM inRef.company);
        SET charvar = TRIM(LEADING 'I' FROM inRef.company);

        -- OVERLAY
        SET charvar = OVERLAY(inRef.name PLACING '1234' FROM 4 FOR 3); -- Assuming name = 'Lakshmi Devi'

        -- POSITION
        SET intvar = POSITION('Lakshmi' IN inRef.name);

        -- REPLACE
        SET charvar = REPLACE(inRef.name, 'Lakshmi', 'Rasi');

        -- REPLICATE
        SET charvar = REPLICATE(inRef.name, 5);

        -- SUBSTRING
        SET charvar = SUBSTRING(inRef.name FROM 7 FOR 5);
		
		
		
		
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
