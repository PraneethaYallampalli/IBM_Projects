

CREATE COMPUTE MODULE loop_mf_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyMessageHeaders();
		-- CALL CopyEntireMessage();
		DECLARE inRef REFERENCE TO InputRoot.XMLNSC.students;
		 DECLARE studentCount INTEGER CARDINALITY(InputRoot.XMLNSC.students[]);
		CREATE FIELD OutputRoot.JSON.Data.students_out;
		DECLARE outRef REFERENCE TO OutputRoot.JSON.Data.students_out;
		DECLARE i INTEGER 1;
		
		X:LOOP
            IF (i <= studentCount) THEN    --i=1 & StudentCount=2 i<=studentcount
            SET outRef.student_out[i].name_out = inRef.student[i].name;  --i=2 & studentCount=2 i<=studentCount 2<=2
            SET outRef.student_out[i].id_out = inRef.student[i].id;
            SET outRef.student_out[i].course_out = inRef.student[i].course;
                SET i = i + 1;
                ITERATE X;
            ELSE
                LEAVE X;
            END IF;
        END LOOP;
		
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
